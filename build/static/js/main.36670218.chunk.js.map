{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","onAdd","showAddTask","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","App","setShowAddTask","setTask","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","resp","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updateTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36670218.chunk.js","sourcesContent":["const Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button className=\"btn\" style={{ backgroundColor: color }} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"steelblue\",\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title, onAdd, showAddTask }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n\r\n      <Button text={showAddTask ? \"Close\" : \"Add\"} color={showAddTask ?  'red': 'steelblue'} onClick={onAdd} />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"Task Tracker\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\n// const headingStyles = {\r\n//     color: '#fff',\r\n//     backgroundColor: 'black'\r\n// }\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n\r\n        {task.text}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p> {task.day} </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task, index) => (\r\n        <Task task={task} key={index} onDelete={onDelete} onToggle={onToggle} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"Please add a task\");\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"task\">Task</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"task\"\r\n          placeholder=\"Add Task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"day\">Day & Time</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"day\"\r\n          placeholder=\"Add Day and Time\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label htmlFor=\"reminder\">Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"reminder\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  // Show or hide form\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  // Static tasks\n  const [tasks, setTask] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTask(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  // Fetch tasks\n  const fetchTasks = async () => {\n    const resp = await fetch(\"http://localhost:5000/tasks\");\n    const data = await resp.json();\n    return data;\n  };\n\n  // Fetch task\n  const fetchTask = async (id) => {\n    const resp = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await resp.json();\n    return data;\n  };\n\n  const addTask = async (task) => {\n    const resp = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await resp.json();\n    // console.log(data)\n    setTask([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n    // setTask([...tasks, newTask]);\n  };\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n\n    setTask(tasks.filter((task) => task.id !== id));\n  };\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updateTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    const resp = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updateTask),\n    });\n\n    const data = await resp.json();\n    setTask(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAddTask={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Task to Show\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}